% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/task_list.R
\name{TaskList}
\alias{TaskList}
\title{R6 class storing a task list}
\description{
R6 class storing a task list

R6 class storing a task list
}
\details{
A task list is a container that holds a collection of tasks
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TaskList-new}{\code{TaskList$new()}}
\item \href{#method-TaskList-length}{\code{TaskList$length()}}
\item \href{#method-TaskList-add_task}{\code{TaskList$add_task()}}
\item \href{#method-TaskList-remove_task}{\code{TaskList$remove_task()}}
\item \href{#method-TaskList-get_task}{\code{TaskList$get_task()}}
\item \href{#method-TaskList-subset}{\code{TaskList$subset()}}
\item \href{#method-TaskList-subset_in_state}{\code{TaskList$subset_in_state()}}
\item \href{#method-TaskList-retrieve}{\code{TaskList$retrieve()}}
\item \href{#method-TaskList-status}{\code{TaskList$status()}}
\item \href{#method-TaskList-clone}{\code{TaskList$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-new"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-new}{}}}
\subsection{Method \code{new()}}{
Create a new task list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-length"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-length}{}}}
\subsection{Method \code{length()}}{
Return the number of tasks in the list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$length()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Integer
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-add_task"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-add_task}{}}}
\subsection{Method \code{add_task()}}{
Append a single task to the bottom of the \code{TaskList}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$add_task(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{A \code{Task} object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-remove_task"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-remove_task}{}}}
\subsection{Method \code{remove_task()}}{
Remove one or more tasks from the \code{TaskList}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$remove_task(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Indices or names of the tasks to remove}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-get_task"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-get_task}{}}}
\subsection{Method \code{get_task()}}{
Return a single \code{Task} contained in the \code{TaskList}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$get_task(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The index or name of the task to return}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{Task} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-subset"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-subset}{}}}
\subsection{Method \code{subset()}}{
Return a subset of the \code{TaskList} as another \code{TaskList}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$subset(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The indices of the \code{Tasks} to retain}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{TaskList} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-subset_in_state"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-subset_in_state}{}}}
\subsection{Method \code{subset_in_state()}}{
Return a list of tasks in a given state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$subset_in_state(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The name of the state (e.g., "waiting")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{TaskList} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-retrieve"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-retrieve}{}}}
\subsection{Method \code{retrieve()}}{
Retrieve the full state of the tasks in tidy form. If
all tasks have completed this output is the same as the output as the
\code{run()} method for a \code{Queue} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$retrieve()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a tibble containing the results of all executed tasks and
various other useful metadata. Incomplete tasks may have missing data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-status"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-status}{}}}
\subsection{Method \code{status()}}{
Update the user on the current state of the \code{TaskList}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$status(message, finished_in = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{Character specifying whether the message type: "none",
"minimal" (the default), or "verbose"}

\item{\code{finished_in}}{Specifies the finishing time, and triggers a task completion
message}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns a vector of the states of all tasks
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TaskList-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TaskList-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskList$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
