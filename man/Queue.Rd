% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queue.R
\name{Queue}
\alias{Queue}
\title{R6 class for a multi-worker task queue}
\description{
R6 class for a multi-worker task queue

R6 class for a multi-worker task queue
}
\details{
Documentation baby...
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Queue-new}{\code{Queue$new()}}
\item \href{#method-Queue-push}{\code{Queue$push()}}
\item \href{#method-Queue-run}{\code{Queue$run()}}
\item \href{#method-Queue-retrieve}{\code{Queue$retrieve()}}
\item \href{#method-Queue-get_queue_report}{\code{Queue$get_queue_report()}}
\item \href{#method-Queue-get_queue_workers}{\code{Queue$get_queue_workers()}}
\item \href{#method-Queue-clone}{\code{Queue$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-new"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-new}{}}}
\subsection{Method \code{new()}}{
Create a task queue
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$new(workers = 4L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{workers}}{Either the number of workers to employ in the task queue,
or a \code{WorkerPool} object to use when deploying the tasks.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Queue} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-push"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-push}{}}}
\subsection{Method \code{push()}}{
Adds a task to the queue
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$push(fun, args = list(), id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{The function to be called when the task is scheduled}

\item{\code{args}}{A list of arguments to be passed to the task function (optional)}

\item{\code{id}}{A string specifying a unique identifier for the task (optional: tasks
will be named "task_1", "task_2", etc if this is unspecified)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the \code{Task} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-run"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-run}{}}}
\subsection{Method \code{run()}}{
Execute tasks in parallel using the worker pool, assigning
tasks to workers in the same order in which they were added to the queue
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$run(
  timelimit = 60,
  message = "minimal",
  interval = 0.05,
  shutdown = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timelimit}}{How long (in seconds) should the worker pool wait for a
task to complete before terminating the child process and moving onto the
next task? (default is 60 seconds, but this is fairly arbitrary)}

\item{\code{message}}{What messages should be reported by the queue while it is
running? Options are "none" (no messages), "minimal" (a spinner is shown
alongside counts of waiting, running, and completed tasks), and "verbose"
(in addition to the spinner, each task is summarized as it completes).
Default is "minimal".}

\item{\code{interval}}{How often should the task queue poll the workers to see
if they have finished their assigned tasks? Specified in seconds.}

\item{\code{shutdown}}{Should the workers in the pool be shut down (i.e., all
R sessions closed) once the tasks are completed. Defaults to \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a tibble containing the results of all executed tasks and
various other useful metadata.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-retrieve"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-retrieve}{}}}
\subsection{Method \code{retrieve()}}{
Retrieve the full state of the tasks queue in tidy form. If
all tasks have completed this output is the same as the output as the
\code{run()} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$retrieve()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a tibble containing the results of all executed tasks and
various other useful metadata. Incomplete tasks nay have missing data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-get_queue_report"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-get_queue_report}{}}}
\subsection{Method \code{get_queue_report()}}{
Get as simplified description of the current state of the
task queue. The corresponding private method is used internally to
generate progress reports and to monitor progress of the task queue,
but might be handy to have a public version.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$get_queue_report()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a tibble with three columns: task_id, state, and runtime
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-get_queue_workers"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-get_queue_workers}{}}}
\subsection{Method \code{get_queue_workers()}}{
Retrieve the workers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$get_queue_workers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{WorkerPool} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Queue-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Queue-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Queue$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
