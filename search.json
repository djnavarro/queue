[{"path":"http://queue.djnavarro.net/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 queue authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://queue.djnavarro.net/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Navarro. Author, maintainer.","code":""},{"path":"http://queue.djnavarro.net/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Navarro D (2022). queue: Simple Multi-Threaded Task Queuing. https://github.com/djnavarro/queue, http://djnavarro.net/queue/.","code":"@Manual{,   title = {queue: Simple Multi-Threaded Task Queuing},   author = {Danielle Navarro},   year = {2022},   note = {https://github.com/djnavarro/queue, http://djnavarro.net/queue/}, }"},{"path":"http://queue.djnavarro.net/index.html","id":"queue","dir":"","previous_headings":"","what":"Simple Multi-Threaded Task Queuing","title":"Simple Multi-Threaded Task Queuing","text":"queue package allows create multi-threaded task queues","code":""},{"path":"http://queue.djnavarro.net/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simple Multi-Threaded Task Queuing","text":"can install development version queue like :","code":"remotes::install_github(\"djnavarro/queue\")"},{"path":"http://queue.djnavarro.net/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Simple Multi-Threaded Task Queuing","text":"’s basic example: output stored tibble:","code":"library(queue) random_wait <- function() {   Sys.sleep(runif(1, min = 0, max = 5))   Sys.time() } queue <- Queue$new(workers = 6) for(i in 1:20) queue$add(random_wait) out <- queue$run(message = \"verbose\") #> → Task done: task_2 (0.15s) #> → Task done: task_5 (0.15s) #> → Task done: task_7 (0.23s) #> → Task done: task_4 (1.03s) #> → Task done: task_6 (1.26s) #> → Task done: task_11 (1.13s) #> → Task done: task_3 (2.8s) #> → Task done: task_1 (2.92s) #> → Task done: task_9 (2.81s) #> → Task done: task_12 (1.04s) #> → Task done: task_10 (3.33s) #> → Task done: task_16 (0.97s) #> → Task done: task_8 (4.67s) #> → Task done: task_18 (2.27s) #> → Task done: task_15 (3.71s) #> → Task done: task_14 (4.06s) #> → Task done: task_13 (4.8s) #> → Task done: task_20 (1.74s) #> → Task done: task_19 (4.16s) #> → Task done: task_17 (4.79s) #> ✔ Queue complete: 20 tasks done (9.17s) out #> # A tibble: 20 × 17 #>    task_id worker_id state result     runtime   fun   args   created             #>    <chr>       <int> <chr> <list>     <drtn>    <lis> <list> <dttm>              #>  1 task_1     298331 done  <dttm [1]> 2.921892… <fn>  <list> 2022-12-21 12:09:17 #>  2 task_2     298343 done  <dttm [1]> 0.154564… <fn>  <list> 2022-12-21 12:09:17 #>  3 task_3     298355 done  <dttm [1]> 2.801716… <fn>  <list> 2022-12-21 12:09:17 #>  4 task_4     298367 done  <dttm [1]> 1.026389… <fn>  <list> 2022-12-21 12:09:17 #>  5 task_5     298379 done  <dttm [1]> 0.154445… <fn>  <list> 2022-12-21 12:09:17 #>  6 task_6     298391 done  <dttm [1]> 1.258186… <fn>  <list> 2022-12-21 12:09:17 #>  7 task_7     298343 done  <dttm [1]> 0.228369… <fn>  <list> 2022-12-21 12:09:17 #>  8 task_8     298379 done  <dttm [1]> 4.667863… <fn>  <list> 2022-12-21 12:09:17 #>  9 task_9     298343 done  <dttm [1]> 2.814760… <fn>  <list> 2022-12-21 12:09:17 #> 10 task_10    298367 done  <dttm [1]> 3.327445… <fn>  <list> 2022-12-21 12:09:17 #> 11 task_11    298391 done  <dttm [1]> 1.132713… <fn>  <list> 2022-12-21 12:09:17 #> 12 task_12    298391 done  <dttm [1]> 1.041694… <fn>  <list> 2022-12-21 12:09:17 #> 13 task_13    298355 done  <dttm [1]> 4.796654… <fn>  <list> 2022-12-21 12:09:17 #> 14 task_14    298331 done  <dttm [1]> 4.058190… <fn>  <list> 2022-12-21 12:09:17 #> 15 task_15    298343 done  <dttm [1]> 3.705963… <fn>  <list> 2022-12-21 12:09:17 #> 16 task_16    298391 done  <dttm [1]> 0.972990… <fn>  <list> 2022-12-21 12:09:17 #> 17 task_17    298367 done  <dttm [1]> 4.794048… <fn>  <list> 2022-12-21 12:09:17 #> 18 task_18    298391 done  <dttm [1]> 2.266615… <fn>  <list> 2022-12-21 12:09:17 #> 19 task_19    298379 done  <dttm [1]> 4.160249… <fn>  <list> 2022-12-21 12:09:17 #> 20 task_20    298391 done  <dttm [1]> 1.740901… <fn>  <list> 2022-12-21 12:09:17 #> # … with 9 more variables: queued <dttm>, assigned <dttm>, started <dttm>, #> #   finished <dttm>, code <int>, message <chr>, stdout <list>, stderr <list>, #> #   error <list>"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for a multi-worker task queue — Queue","title":"R6 class for a multi-worker task queue — Queue","text":"R6 class multi-worker task queue R6 class multi-worker task queue","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for a multi-worker task queue — Queue","text":"Documentation baby...","code":""},{"path":[]},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for a multi-worker task queue — Queue","text":"Queue$new() Queue$add() Queue$run() Queue$get_workers() Queue$get_tasks() Queue$clone()","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for a multi-worker task queue — Queue","text":"Create task queue","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$new(workers = 4L)"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a multi-worker task queue — Queue","text":"workers Either number workers employ task queue, WorkerPool object use deploying tasks.","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a multi-worker task queue — Queue","text":"new Queue object","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"R6 class for a multi-worker task queue — Queue","text":"Adds task queue","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$add(fun, args = list(), id = NULL)"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a multi-worker task queue — Queue","text":"fun function called task scheduled args list arguments passed task function (optional) id string specifying unique identifier task (optional: tasks named \"task_1\", \"task_2\", etc unspecified)","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a multi-worker task queue — Queue","text":"Invisibly returns Task object","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"R6 class for a multi-worker task queue — Queue","text":"Execute tasks parallel using worker pool, assigning tasks workers order added queue","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$run(   timelimit = 60,   message = \"minimal\",   interval = 0.05,   shutdown = TRUE )"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a multi-worker task queue — Queue","text":"timelimit long (seconds) worker pool wait task complete terminating child process moving onto next task? (default 60 seconds, fairly arbitrary) message messages reported queue running? Options \"none\" (messages), \"minimal\" (spinner shown alongside counts waiting, running, completed tasks), \"verbose\" (addition spinner, task summarized completes). Default \"minimal\". interval often task queue poll workers see finished assigned tasks? Specified seconds. shutdown workers pool shut (.e., R sessions closed) tasks completed. Defaults TRUE.","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a multi-worker task queue — Queue","text":"Returns tibble containing results tasks various useful metadata. Contains one row per task Queue, following columns: task_id character string specifying task identifiers worker_id integer specifying worker process ids (pid) state character string indicating status task (\"created\", \"waiting\", \"assigned\", \"running\", \"done\") result list containing function outputs, NULL runtime Completion time task (NA task done) fun list containing functions args list containing arguments passed function created time task created queued time task added Queue assigned time task assigned Worker started time Worker called function finished time Worker output returned task code status code returned callr R session (integer) message message returned callr R session (character) stdout List column containing contents stdout function execution stderr List column containing contents stderr function execution error  List column containing NULL values Note: present one field callr rsession::read() method captured , error field. add finished wrapping head around actually . error column, present, included placeholder","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-get-workers-","dir":"Reference","previous_headings":"","what":"Method get_workers()","title":"R6 class for a multi-worker task queue — Queue","text":"Retrieve workers","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$get_workers()"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a multi-worker task queue — Queue","text":"WorkerPool object","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-get-tasks-","dir":"Reference","previous_headings":"","what":"Method get_tasks()","title":"R6 class for a multi-worker task queue — Queue","text":"Retrieve tasks","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$get_tasks()"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for a multi-worker task queue — Queue","text":"TaskList object","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for a multi-worker task queue — Queue","text":"objects class cloneable method.","code":""},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for a multi-worker task queue — Queue","text":"","code":"Queue$clone(deep = FALSE)"},{"path":"http://queue.djnavarro.net/reference/Queue.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for a multi-worker task queue — Queue","text":"deep Whether make deep clone.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class storing a task — Task","title":"R6 class storing a task — Task","text":"R6 class storing task R6 class storing task","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class storing a task — Task","text":"Task object used storage class. container used hold R function arguments passed function. can also hold output returned function, anything printed stdout stderr function called, various metadata process id worker executed function, timestamps, . methods Task objects fall two groups, roughly speaking. get_*() methods used return information Task, register_*() methods used register information related events relevant Task status. retrieve() method special, returns tibble containing information stored task. Objects hierarchy use method return nicely organised output summarise results many tasks.","code":""},{"path":[]},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class storing a task — Task","text":"Task$new() Task$retrieve() Task$get_task_fun() Task$get_task_args() Task$get_task_state() Task$get_task_id() Task$get_task_runtime() Task$register_task_created() Task$register_task_waiting() Task$register_task_assigned() Task$register_task_running() Task$register_task_done() Task$clone()","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class storing a task — Task","text":"Create new task. Conceptually, Task viewed function executed Worker assigned, generally expected resources function requires passed arguments since execution context different R session one function defined.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$new(fun, args = list(), id = NULL)"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task — Task","text":"fun function called task executes. args list arguments passed function (optional). id string specifying unique task identifier (optional).","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"new Task object.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 class storing a task — Task","text":"Retrieve tidy summary task state.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$retrieve()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"tibble containing single row, following columns: task_id character string specifying task identifier worker_id integer specifying worker process id (pid) state character string indicating task status (\"created\", \"waiting\", \"assigned\", \"running\", \"done\") result list containing function output, NULL runtime Completion time task (NA task done) fun list containing function args list containing arguments created time task created queued time task added Queue assigned time task assigned Worker started time Worker called function finished time Worker output returned code status code returned callr R session (integer) message message returned callr R session (character) stdout List containing contents stdout function execution stderr List containing contents stderr function execution error  List containing NULL Note: present one field callr rsession::read() method captured , error field. add finished wrapping head around actually . error column, present, included placeholder","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-get-task-fun-","dir":"Reference","previous_headings":"","what":"Method get_task_fun()","title":"R6 class storing a task — Task","text":"Retrieve task function.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$get_task_fun()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"function.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-get-task-args-","dir":"Reference","previous_headings":"","what":"Method get_task_args()","title":"R6 class storing a task — Task","text":"Retrieve task arguments","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$get_task_args()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"list.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-get-task-state-","dir":"Reference","previous_headings":"","what":"Method get_task_state()","title":"R6 class storing a task — Task","text":"Retrieve task state.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$get_task_state()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"string specifying current state task. Possible values \"created\" (task exists), \"waiting\" (task exists waiting queue), \"assigned\" (task assigned worker yet started), \"running\" (task running worker), \"done\" (task completed results assigned back task object)","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-get-task-id-","dir":"Reference","previous_headings":"","what":"Method get_task_id()","title":"R6 class storing a task — Task","text":"Retrieve task id.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$get_task_id()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"string containing task identifier.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-get-task-runtime-","dir":"Reference","previous_headings":"","what":"Method get_task_runtime()","title":"R6 class storing a task — Task","text":"Retrieve task runtime.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$get_task_runtime()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"task completed, difftime value. task yet complete, NA value returned","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-register-task-created-","dir":"Reference","previous_headings":"","what":"Method register_task_created()","title":"R6 class storing a task — Task","text":"Register task creation updating internal storage. method called, state Task set \"created\" timestamp recorded, registering creation time task. method intended called Worker objects. Users need call .","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$register_task_created()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"Returns NULL invisibly.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-register-task-waiting-","dir":"Reference","previous_headings":"","what":"Method register_task_waiting()","title":"R6 class storing a task — Task","text":"Register addition task queue updating internal storage. method called, state Task set \"waiting\" timestamp recorded, registering time task added queue. method intended called Worker objects. Users need call .","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$register_task_waiting()"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"Returns NULL invisibly.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-register-task-assigned-","dir":"Reference","previous_headings":"","what":"Method register_task_assigned()","title":"R6 class storing a task — Task","text":"Register assignment task worker updating internal storage. method called, state Task set \"assigned\" timestamp recorded, registering time task assigned Worker. addition, worker_id worker object (also pid) registered task. method intended called Worker objects. Users need call .","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$register_task_assigned(worker_id)"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task — Task","text":"worker_id Identifier worker task assigned.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"Returns NULL invisibly.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-register-task-running-","dir":"Reference","previous_headings":"","what":"Method register_task_running()","title":"R6 class storing a task — Task","text":"Register commencement task worker updating internal storage. method called, state Task set \"running\" timestamp recorded, registering time Worker called task function. addition, worker_id recorded, albeit somewhat unnecessarily since information likely already stored register_task_assigned() called. method intended called Worker objects. Users need call .","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$register_task_running(worker_id)"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task — Task","text":"worker_id Identifier worker task starting.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"Returns NULL invisibly.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-register-task-done-","dir":"Reference","previous_headings":"","what":"Method register_task_done()","title":"R6 class storing a task — Task","text":"Register finishing task worker updating internal storage. method called, state Task set \"done\" timestamp recorded, registering time Worker returned results Task. results object read R session, stored locally Task time. method intended called Worker objects. Users need call .","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$register_task_done(results)"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task — Task","text":"results Results read R session.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task — Task","text":"Returns NULL invisibly.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class storing a task — Task","text":"objects class cloneable method.","code":""},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task — Task","text":"","code":"Task$clone(deep = FALSE)"},{"path":"http://queue.djnavarro.net/reference/Task.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task — Task","text":"deep Whether make deep clone.","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class storing a task list — TaskList","title":"R6 class storing a task list — TaskList","text":"R6 class storing task list R6 class storing task list","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class storing a task list — TaskList","text":"TaskList class used storage class. provides container holds collection Task objects, along collection methods adding, removing, getting Tasks. can also report status Tasks contained within list retrieve results Tasks. manage interactions Workers arrange Tasks executed. job Queue.","code":""},{"path":[]},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class storing a task list — TaskList","text":"TaskList$new() TaskList$length() TaskList$add_task() TaskList$remove_task() TaskList$get_task() TaskList$get_state() TaskList$get_tasks_in_state() TaskList$retrieve() TaskList$clone()","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class storing a task list — TaskList","text":"Create new task list","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$new()"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class storing a task list — TaskList","text":"Return number tasks list","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$length()"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task list — TaskList","text":"Integer","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-add-task-","dir":"Reference","previous_headings":"","what":"Method add_task()","title":"R6 class storing a task list — TaskList","text":"Add task TaskList","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$add_task(task)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"task Task object added","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-remove-task-","dir":"Reference","previous_headings":"","what":"Method remove_task()","title":"R6 class storing a task list — TaskList","text":"method removes one tasks TaskList.","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$remove_task(x)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"x Indices tasks removed","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-get-task-","dir":"Reference","previous_headings":"","what":"Method get_task()","title":"R6 class storing a task list — TaskList","text":"Return single Task contained TaskList. Task removed TaskList, reference semantics: listed task completed Worker, status Task returned method update automatically","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$get_task(x)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"x index task return","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task list — TaskList","text":"Task object","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-get-state-","dir":"Reference","previous_headings":"","what":"Method get_state()","title":"R6 class storing a task list — TaskList","text":"Return status tasks TaskList. requested, method also display messages summarising current state tasks, tasks completed since last time status returned. messaging system called Queue objects work tasks","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$get_state(message = \"none\", finished_in = NULL)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"message Character specifying type message display: \"none\" (default), \"minimal\", \"verbose\" finished_in numeric value difftime specifying long tasks taken complete. argument used displaying messages, used trigger display tidy \"tasks completed\" style message. purely cosmetic affect task status.","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task list — TaskList","text":"character vector specifying completion status listed tasks","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-get-tasks-in-state-","dir":"Reference","previous_headings":"","what":"Method get_tasks_in_state()","title":"R6 class storing a task list — TaskList","text":"Return list tasks given state","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$get_tasks_in_state(x)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"x name state (e.g., \"waiting\")","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task list — TaskList","text":"TaskList object","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 class storing a task list — TaskList","text":"Retrieves current state tasks.","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$retrieve()"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a task list — TaskList","text":"Returns tibble containing results tasks various useful metadata. Contains one row per task TaskList, following columns: task_id character string specifying task identifiers worker_id integer specifying worker process ids (pid) state character string indicating status task (\"created\", \"waiting\", \"assigned\", \"running\", \"done\") result list containing function outputs, NULL runtime Completion time task (NA task done) fun list containing functions args list containing arguments passed function created time task created queued time task added Queue assigned time task assigned Worker started time Worker called function finished time Worker output returned task code status code returned callr R session (integer) message message returned callr R session (character) stdout List column containing contents stdout function execution stderr List column containing contents stderr function execution error  List column containing NULL values tasks completed output output run() method Queue object. Note: present one field callr rsession::read() method captured , error field. add finished wrapping head around actually . error column, present, included placeholder","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class storing a task list — TaskList","text":"objects class cloneable method.","code":""},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a task list — TaskList","text":"","code":"TaskList$clone(deep = FALSE)"},{"path":"http://queue.djnavarro.net/reference/TaskList.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a task list — TaskList","text":"deep Whether make deep clone.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class storing a worker — Worker","title":"R6 class storing a worker — Worker","text":"R6 class storing worker R6 class storing worker","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class storing a worker — Worker","text":"Worker class interacts external R session, possesses methods allow work Task objects. core, class thin wrapper around callr::r_session object, fact session object can obtained calling get_worker_session() method. cases neccessary however, Worker objects typically created part WorkerPool managed Queue, higher level structures use methods exposed Worker object.","code":""},{"path":[]},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class storing a worker — Worker","text":"Worker$new() Worker$get_worker_id() Worker$get_worker_state() Worker$get_worker_runtime() Worker$get_worker_task() Worker$get_worker_session() Worker$try_assign() Worker$try_start() Worker$try_finish() Worker$shutdown_worker() Worker$clone()","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class storing a worker — Worker","text":"Create new worker object.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$new()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"new Worker object.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-get-worker-id-","dir":"Reference","previous_headings":"","what":"Method get_worker_id()","title":"R6 class storing a worker — Worker","text":"Retrieve worker identifier.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$get_worker_id()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"worker identifier (also pid R process)","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-get-worker-state-","dir":"Reference","previous_headings":"","what":"Method get_worker_state()","title":"R6 class storing a worker — Worker","text":"Retrieve worker state.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$get_worker_state()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"string specifying current state task. Possible values \"starting\" (R session starting ), \"idle\" (R session ready compute), \"busy\" (R session computing), \"finished\" (R session terminated). Importantly, note task function still running task function essentially finished waiting return return \"busy\". distinguish two cases need use poll_process() method callr::rsession, returned get_worker_session().","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-get-worker-runtime-","dir":"Reference","previous_headings":"","what":"Method get_worker_runtime()","title":"R6 class storing a worker — Worker","text":"Return total length time worker session running, length time current task running. session finished values NA. session idle (task running) total session time return value current task time NA.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$get_worker_runtime()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"vector two difftimes.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-get-worker-task-","dir":"Reference","previous_headings":"","what":"Method get_worker_task()","title":"R6 class storing a worker — Worker","text":"Retrieve task assigned worker.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$get_worker_task()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"Task object currently assigned Worker, NULL.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-get-worker-session-","dir":"Reference","previous_headings":"","what":"Method get_worker_session()","title":"R6 class storing a worker — Worker","text":"Retrieve R session associated Worker","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$get_worker_session()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"R session object, see callr::r_session","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-try-assign-","dir":"Reference","previous_headings":"","what":"Method try_assign()","title":"R6 class storing a worker — Worker","text":"Attempt assign task worker. method checks task worker appropriate state. , objects register connection . method intended called WorkerPool Queue.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$try_assign(task)"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a worker — Worker","text":"task Task object corresponding --assigned task.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"Invisibly returns TRUE FALSE, depending whether attempt successful.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-try-start-","dir":"Reference","previous_headings":"","what":"Method try_start()","title":"R6 class storing a worker — Worker","text":"Attempt start task. method checks see worker assigned task, starts running within R session. also registers change status within Task object . method intended called WorkerPool Queue.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$try_start()"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"Invisibly returns TRUE FALSE, depending whether attempt successful.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-try-finish-","dir":"Reference","previous_headings":"","what":"Method try_finish()","title":"R6 class storing a worker — Worker","text":"Attempt finish running task politely. method checks see worker running task, polls R session determine R process claims ready return. ready--return task results read R process returned Task object. task status updated, unassigned Worker. method intended called WorkerPool Queue.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$try_finish(timeout = 0)"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a worker — Worker","text":"timeout Length time wait process polled (default = 0)","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a worker — Worker","text":"Invisibly returns TRUE FALSE, depending whether attempt successful.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-shutdown-worker-","dir":"Reference","previous_headings":"","what":"Method shutdown_worker()","title":"R6 class storing a worker — Worker","text":"Attempt shut R session gracefully, making attempt salvage task worker believes assigned. salvage operation depends state task. Task assigned started, Worker return \"waiting\" state hope Queue assign another worker later, unassign . Task running, Worker attempt read R session register Task \"done\" regardless outcome. (reason ensure tasks crash freeze R session get returned Queue).","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$shutdown_worker(grace = 1000)"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a worker — Worker","text":"grace Grace period milliseconds. process still running period, killed.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class storing a worker — Worker","text":"objects class cloneable method.","code":""},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a worker — Worker","text":"","code":"Worker$clone(deep = FALSE)"},{"path":"http://queue.djnavarro.net/reference/Worker.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a worker — Worker","text":"deep Whether make deep clone.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class storing a pool of workers — WorkerPool","title":"R6 class storing a pool of workers — WorkerPool","text":"R6 class storing pool workers R6 class storing pool workers","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class storing a pool of workers — WorkerPool","text":"WorkerPool container holds one workers can request assign tasks, start tasks, complete tasks. can also check see worker sessions crashed restart needed. fields methods allow work Tasks","code":""},{"path":[]},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class storing a pool of workers — WorkerPool","text":"WorkerPool$new() WorkerPool$get_pool_worker() WorkerPool$get_pool_state() WorkerPool$try_assign() WorkerPool$try_start() WorkerPool$try_finish() WorkerPool$refill_pool() WorkerPool$shutdown_pool() WorkerPool$shutdown_overdue_workers() WorkerPool$clone()","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class storing a pool of workers — WorkerPool","text":"Create new worker pool","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$new(workers = 4L)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"workers number workers pool.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"new WorkerPool object.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-get-pool-worker-","dir":"Reference","previous_headings":"","what":"Method get_pool_worker()","title":"R6 class storing a pool of workers — WorkerPool","text":"Return specific worker","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$get_pool_worker(ind)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"ind index worker pool","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"corresponding Worker object.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-get-pool-state-","dir":"Reference","previous_headings":"","what":"Method get_pool_state()","title":"R6 class storing a pool of workers — WorkerPool","text":"Return simple summary worker pool","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$get_pool_state()"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"named character vector specifying current state worker (\"starting\", \"idle\", \"busy\", \"finished\"). Names denote worker ids","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-try-assign-","dir":"Reference","previous_headings":"","what":"Method try_assign()","title":"R6 class storing a pool of workers — WorkerPool","text":"Attempt assign tasks workers. method intended called Queue objects.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$try_assign(tasks)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"tasks TaskList object","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"Invisibly returns NULL","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-try-start-","dir":"Reference","previous_headings":"","what":"Method try_start()","title":"R6 class storing a pool of workers — WorkerPool","text":"Attempt start assigned -yet-started tasks worker pool. method intended called Queue objects.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$try_start()"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"Invisibly returns NULL","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-try-finish-","dir":"Reference","previous_headings":"","what":"Method try_finish()","title":"R6 class storing a pool of workers — WorkerPool","text":"Attempt finish started -yet-returned tasks worker pool. method intended called Queue objects.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$try_finish()"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"Invisibly returns NULL","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-refill-pool-","dir":"Reference","previous_headings":"","what":"Method refill_pool()","title":"R6 class storing a pool of workers — WorkerPool","text":"Check workers pool looking workers crashed shutdown, replace fresh workers.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$refill_pool()"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"function called primarily side effect. returns named character documenting outcome, indicating current state worker: \"finished\" worker. Names denote worker ids.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-shutdown-pool-","dir":"Reference","previous_headings":"","what":"Method shutdown_pool()","title":"R6 class storing a pool of workers — WorkerPool","text":"Terminate workers worker pool.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$shutdown_pool(grace = 1000)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"grace Grace period milliseconds. worker process still running period, killed.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"function called primarily side effect. returns named character documenting outcome, indicating current state worker: \"finished\" workers. Names denote worker ids.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-shutdown-overdue-workers-","dir":"Reference","previous_headings":"","what":"Method shutdown_overdue_workers()","title":"R6 class storing a pool of workers — WorkerPool","text":"Terminate workers worked current task longer pre-specified time limit.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$shutdown_overdue_workers(timelimit, grace = 1000)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"timelimit Pre-specified time limit task, seconds. grace Grace period shutdown, milliseconds. worker process still running period, killed.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class storing a pool of workers — WorkerPool","text":"function called primarily side effect. returns named character documenting outcome, indicating current state worker: \"finished\" workers. Names denote worker ids.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class storing a pool of workers — WorkerPool","text":"objects class cloneable method.","code":""},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class storing a pool of workers — WorkerPool","text":"","code":"WorkerPool$clone(deep = FALSE)"},{"path":"http://queue.djnavarro.net/reference/WorkerPool.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class storing a pool of workers — WorkerPool","text":"deep Whether make deep clone.","code":""}]
